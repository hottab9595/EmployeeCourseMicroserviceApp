// <auto-generated />
using System;
using AuthorizationMicroservice.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AuthorizationMicroservice.Db.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220210205451_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AuthorizationMicroservice.Db.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3bc3bd5f-c0ed-4e4f-bfd4-bf3a94ee83af"),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("c97736b5-a78e-48ce-9f42-4d5b823fb72d"),
                            Name = "Guest"
                        });
                });

            modelBuilder.Entity("AuthorizationMicroservice.Db.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("21255c40-92e0-4084-b69c-8be4b86890bb"),
                            Login = "admin",
                            Password = "admin"
                        },
                        new
                        {
                            Id = new Guid("059454e3-d89b-44ed-b0ec-4f3feecd227a"),
                            Login = "guest",
                            Password = "guest"
                        });
                });

            modelBuilder.Entity("AuthorizationMicroservice.Db.Models.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("94b90977-7e77-4df0-9b27-72e03b715c34"),
                            RoleId = new Guid("3bc3bd5f-c0ed-4e4f-bfd4-bf3a94ee83af"),
                            UserId = new Guid("21255c40-92e0-4084-b69c-8be4b86890bb")
                        },
                        new
                        {
                            Id = new Guid("217ccd1e-f256-4e83-9014-3c673059f83c"),
                            RoleId = new Guid("c97736b5-a78e-48ce-9f42-4d5b823fb72d"),
                            UserId = new Guid("059454e3-d89b-44ed-b0ec-4f3feecd227a")
                        });
                });

            modelBuilder.Entity("AuthorizationMicroservice.Db.Models.UserRole", b =>
                {
                    b.HasOne("AuthorizationMicroservice.Db.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuthorizationMicroservice.Db.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AuthorizationMicroservice.Db.Models.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("AuthorizationMicroservice.Db.Models.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
